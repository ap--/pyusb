name: pyusb packaging
on: [push, pull_request]

jobs:
  sdist:
    name: Create pyusb source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools>=30.3.0
    - name: Create source distribution
      run: |
        python setup.py sdist
    - uses: actions/upload-artifact@v2
      with:
        name: pyusb-sdist
        path: dist/pyusb-*.tar.gz

  install_debians:
    needs: sdist
    name: Test install on ${{ matrix.container }} for ${{ matrix.python }}
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        container:
          - ubuntu:20.04
          - ubuntu:19.10
          - ubuntu:18.04
          - ubuntu:16.04
          - ubuntu:14.04
          - debian:buster
          - debian:stretch
          - debian:jessie
        python:
          - python
          - python3
    steps:
      - name: Install setuptools
        run: |
          apt-get update
          apt-get install -y ${{ matrix.python }}-setuptools
      - name: Install setuptools-scm
        continue-on-error: true
        run: |
          apt-get install -y ${{ matrix.python }}-setuptools-scm
      - name: Ubuntu 20.04 python alias
        if: matrix.container == 'ubuntu:20.04'
        run: apt-get install -y python-is-python2
      - uses: actions/download-artifact@v2
        with:
          name: pyusb-sdist
      - name: Extract source dist
        run: |
          tar xzvf pyusb-*.tar.gz --strip 1
      - name: Show setuptools version
        run: |
          ${{ matrix.python }} -c "from setuptools import __version__; print(__version__)"
      - name: Test install
        run: ${{ matrix.python }} setup.py install
      - name: Assert Version
        run: ${{ matrix.python }} -c "import usb, sys; (usb.__version__ != '0.0.0') or sys.exit(1); print(usb.__version__)"

  install_redhats:
    needs: sdist
    name: Test install on ${{ matrix.container }} for ${{ matrix.python }}
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        container:
          - centos:centos8
        python:
          - python3
          - python2
        include:
          # include centos7 and centos6 with the default python
          - container: centos:centos7
            python: python
          - container: centos:centos6
            python: python
    steps:
      - name: centos8 install python
        if: matrix.container == 'centos:centos8'
        run: |
          yum install -y ${{ matrix.python }}
          mkdir -p /usr/local/lib/python3.6/site-packages/
      - name: Install setuptools
        run: |
          yum install -y ${{ matrix.python }}-setuptools
      - uses: actions/download-artifact@v2
        with:
          name: pyusb-sdist
      - name: Extract source dist
        run: |
          tar xzvf pyusb-*.tar.gz --strip 1
      - name: Show setuptools version
        run: |
          ${{ matrix.python }} -c "from setuptools import __version__; print(__version__)"
      - name: Test install
        run: ${{ matrix.python }} setup.py install
      - name: Assert Version
        run: ${{ matrix.python }} -c "import usb, sys; (usb.__version__ != '0.0.0') or sys.exit(1); print(usb.__version__)"
